pub const root = "/Users/john/Dev/Assets/glTF-Sample-Models/2.0/";

// Curated demo model list - ordered from simple to complex
pub const DemoModel = struct {
    path: []const u8,
    name: []const u8,
    format: []const u8,
    category: []const u8,
    description: []const u8,
};

pub const demo_models = [_]DemoModel{
    // Simple models - good for basic testing
    .{
        .path = "Box/glTF-Binary/Box.glb",
        .name = "Box",
        .format = "GLB",
        .category = "Simple",
        .description = "Basic cube - simplest test case",
    },
    .{
        .path = "BoxTextured/glTF-Binary/BoxTextured.glb",
        .name = "Textured Box",
        .format = "GLB",
        .category = "Simple",
        .description = "Cube with UV mapping and texture",
    },
    .{
        .path = "Cube/glTF/Cube.gltf",
        .name = "Cube",
        .format = "glTF",
        .category = "Simple",
        .description = "Cube with texture",
    },
     .{
        .path = "Lantern/glTF/Lantern.gltf",
        .name = "Lantern",
        .format = "glTF",
        .category = "Moderate",
        .description = "Lamp post with lantern",
    },

    // Animated models - character movement testing
    .{
        //.path = "Fox/glTF-Binary/Fox.glb",
        .path = "Fox/glTF/Fox.gltf",
        .name = "Fox",
        .format = "glTF",
        .category = "Animated",
        .description = "Character with multiple animations",
    },
    .{
        .path = "CesiumMan/glTF-Binary/CesiumMan.glb",
        .name = "Cesium Man",
        .format = "GLB",
        .category = "Animated",
        .description = "Walking character animation",
    },
    .{
        .path = "BoxAnimated/glTF-Binary/BoxAnimated.glb",
        .name = "Animated Box",
        .format = "GLB",
        .category = "Animated",
        .description = "Simple rotation animation",
    },

    // Complex models - advanced rendering features
    .{
        .path = "DamagedHelmet/glTF-Binary/DamagedHelmet.glb",
        .name = "Damaged Helmet",
        .format = "GLB",
        .category = "Complex",
        .description = "High-quality PBR showcase",
    },
    .{
        .path = "FlightHelmet/glTF/FlightHelmet.gltf",
        .name = "Flight Helmet",
        .format = "glTF",
        .category = "Complex",
        .description = "Detailed materials and textures",
    },
    .{
        .path = "BrainStem/glTF-Binary/BrainStem.glb",
        .name = "Brain Stem",
        .format = "GLB",
        .category = "Complex",
        .description = "Complex organic geometry",
    },

    // Format comparison - same model in different formats
    .{
        .path = "Duck/glTF/Duck.gltf",
        .name = "Duck (glTF)",
        .format = "glTF",
        .category = "Format Test",
        .description = "Classic model in glTF format",
    },
    .{
        .path = "Duck/glTF-Binary/Duck.glb",
        .name = "Duck (GLB)",
        .format = "GLB",
        .category = "Format Test",
        .description = "Same model in binary format",
    },
    .{
        .path = "Avocado/glTF/Avocado.gltf",
        .name = "Avocado (glTF)",
        .format = "glTF",
        .category = "Format Test",
        .description = "Organic shape in glTF format",
    },
    .{
        .path = "Avocado/glTF-Binary/Avocado.glb",
        .name = "Avocado (GLB)",
        .format = "GLB",
        .category = "Format Test",
        .description = "Same model in binary format",
    },

    // Edge cases - special testing scenarios
    .{
        .path = "Unicode❤♻Test/glTF-Binary/Unicode❤♻Test.glb",
        .name = "Unicode Test",
        .format = "GLB",
        .category = "Edge Case",
        .description = "Unicode filename handling",
    },
    .{
        .path = "BoxInterleaved/glTF-Binary/BoxInterleaved.glb",
        .name = "Interleaved Box",
        .format = "GLB",
        .category = "Edge Case",
        .description = "Interleaved vertex data",
    },
};

// Legacy arrays maintained for compatibility
pub const gltf_model_paths = [_][]const u8{
    "2CylinderEngine/glTF/2CylinderEngine.gltf",
    "ABeautifulGame/glTF/ABeautifulGame.gltf",
    "AlphaBlendModeTest/glTF/AlphaBlendModeTest.gltf",
    "AnimatedCube/glTF/AnimatedCube.gltf",
    "AnimatedMorphCube/glTF/AnimatedMorphCube.gltf",
    "AnimatedMorphCube/glTF-Quantized/AnimatedMorphCube.gltf",
    "AnimatedMorphSphere/glTF/AnimatedMorphSphere.gltf",
    "AnimatedTriangle/glTF/AnimatedTriangle.gltf",
    "AntiqueCamera/glTF/AntiqueCamera.gltf",
    "AttenuationTest/glTF/AttenuationTest.gltf",
    "Avocado/glTF/Avocado.gltf",
    "Avocado/glTF-Quantized/Avocado.gltf",
    "BarramundiFish/glTF/BarramundiFish.gltf",
    "BoomBox/glTF/BoomBox.gltf",
    "BoomBoxWithAxes/glTF/BoomBoxWithAxes.gltf",
    "Box/glTF/Box.gltf",
    "Box With Spaces/glTF/Box With Spaces.gltf",
    "BoxAnimated/glTF/BoxAnimated.gltf",
    "BoxInterleaved/glTF/BoxInterleaved.gltf",
    "BoxTextured/glTF/BoxTextured.gltf",
    "BoxTexturedNonPowerOfTwo/glTF/BoxTexturedNonPowerOfTwo.gltf",
    "BoxVertexColors/glTF/BoxVertexColors.gltf",
    "BrainStem/glTF/BrainStem.gltf",
    "BrainStem/glTF-Meshopt/BrainStem.gltf",
    "Buggy/glTF/Buggy.gltf",
    "Cameras/glTF/Cameras.gltf",
    "CesiumMan/glTF/CesiumMan.gltf",
    "CesiumMilkTruck/glTF/CesiumMilkTruck.gltf",
    "ClearCoatCarPaint/glTF/ClearCoatCarPaint.gltf",
    "ClearCoatTest/glTF/ClearCoatTest.gltf",
    "ClearcoatWicker/glTF/ClearcoatWicker.gltf",
    "Corset/glTF/Corset.gltf",
    "Cube/glTF/Cube.gltf",
    "DamagedHelmet/glTF/DamagedHelmet.gltf",
    "DragonAttenuation/glTF/DragonAttenuation.gltf",
    "DragonAttenuation/glTF-Meshopt/DragonAttenuation.gltf",
    "Duck/glTF/Duck.gltf",
    "Duck/glTF-Quantized/Duck.gltf",
    "EmissiveStrengthTest/glTF/EmissiveStrengthTest.gltf",
    "EnvironmentTest/glTF/EnvironmentTest.gltf",
    "EnvironmentTest/glTF-IBL/EnvironmentTest.gltf",
    "FlightHelmet/glTF/FlightHelmet.gltf",
    "FlightHelmet/glTF-KTX-BasisU/FlightHelmet.gltf",
    "Fox/glTF/Fox.gltf",
    "GearboxAssy/glTF/GearboxAssy.gltf",
    "GlamVelvetSofa/glTF/GlamVelvetSofa.gltf",
    "InterpolationTest/glTF/InterpolationTest.gltf",
    "IridescenceDielectricSpheres/glTF/IridescenceDielectricSpheres.gltf",
    "IridescenceLamp/glTF/IridescenceLamp.gltf",
    "IridescenceMetallicSpheres/glTF/IridescenceMetallicSpheres.gltf",
    "IridescenceSuzanne/glTF/IridescenceSuzanne.gltf",
    "IridescentDishWithOlives/glTF/IridescentDishWithOlives.gltf",
    "Lantern/glTF/Lantern.gltf",
    "Lantern/glTF-Quantized/Lantern.gltf",
    "LightsPunctualLamp/glTF/LightsPunctualLamp.gltf",
    "MaterialsVariantsShoe/glTF/MaterialsVariantsShoe.gltf",
    "MeshPrimitiveModes/glTF/MeshPrimitiveModes.gltf",
    "MetalRoughSpheres/glTF/MetalRoughSpheres.gltf",
    "MetalRoughSpheresNoTextures/glTF/MetalRoughSpheresNoTextures.gltf",
    "MorphPrimitivesTest/glTF/MorphPrimitivesTest.gltf",
    "MorphStressTest/glTF/MorphStressTest.gltf",
    "MosquitoInAmber/glTF/MosquitoInAmber.gltf",
    "MultiUVTest/glTF/MultiUVTest.gltf",
    "MultipleScenes/glTF/MultipleScenes.gltf",
    "NegativeScaleTest/glTF/NegativeScaleTest.gltf",
    "NormalTangentMirrorTest/glTF/NormalTangentMirrorTest.gltf",
    "NormalTangentTest/glTF/NormalTangentTest.gltf",
    "OrientationTest/glTF/OrientationTest.gltf",
    "ReciprocatingSaw/glTF/ReciprocatingSaw.gltf",
    "RecursiveSkeletons/glTF/RecursiveSkeletons.gltf",
    "RiggedFigure/glTF/RiggedFigure.gltf",
    "RiggedSimple/glTF/RiggedSimple.gltf",
    "SciFiHelmet/glTF/SciFiHelmet.gltf",
    "SheenChair/glTF/SheenChair.gltf",
    "SheenCloth/glTF/SheenCloth.gltf",
    "SimpleInstancing/glTF/SimpleInstancing.gltf",
    "SimpleMeshes/glTF/SimpleMeshes.gltf",
    "SimpleMorph/glTF/SimpleMorph.gltf",
    "SimpleSkin/glTF/SimpleSkin.gltf",
    "SimpleSparseAccessor/glTF/SimpleSparseAccessor.gltf",
    "SpecGlossVsMetalRough/glTF/SpecGlossVsMetalRough.gltf",
    "SpecularTest/glTF/SpecularTest.gltf",
    "Sponza/glTF/Sponza.gltf",
    "StainedGlassLamp/glTF/StainedGlassLamp.gltf",
    "StainedGlassLamp/glTF-JPG-PNG/StainedGlassLamp.gltf",
    "StainedGlassLamp/glTF-KTX-BasisU/StainedGlassLamp.gltf",
    "Suzanne/glTF/Suzanne.gltf",
    "TextureCoordinateTest/glTF/TextureCoordinateTest.gltf",
    "TextureEncodingTest/glTF/TextureEncodingTest.gltf",
    "TextureLinearInterpolationTest/glTF/TextureLinearInterpolationTest.gltf",
    "TextureSettingsTest/glTF/TextureSettingsTest.gltf",
    "TextureTransformMultiTest/glTF/TextureTransformMultiTest.gltf",
    "TextureTransformTest/glTF/TextureTransformTest.gltf",
    "ToyCar/glTF/ToyCar.gltf",
    "TransmissionRoughnessTest/glTF/TransmissionRoughnessTest.gltf",
    "TransmissionTest/glTF/TransmissionTest.gltf",
    "Triangle/glTF/Triangle.gltf",
    "TriangleWithoutIndices/glTF/TriangleWithoutIndices.gltf",
    "TwoSidedPlane/glTF/TwoSidedPlane.gltf",
    "Unicode❤♻Test/glTF/Unicode❤♻Test.gltf",
    "UnlitTest/glTF/UnlitTest.gltf",
    "VC/glTF/VC.gltf",
    "VertexColorTest/glTF/VertexColorTest.gltf",
    "WaterBottle/glTF/WaterBottle.gltf",
};

const glb_model_paths = [_][]const u8{
    "2CylinderEngine/glTF-Binary/2CylinderEngine.glb",
    "AlphaBlendModeTest/glTF-Binary/AlphaBlendModeTest.glb",
    "AnimatedMorphCube/glTF-Binary/AnimatedMorphCube.glb",
    "AnimatedMorphSphere/glTF-Binary/AnimatedMorphSphere.glb",
    "AntiqueCamera/glTF-Binary/AntiqueCamera.glb",
    "AttenuationTest/glTF-Binary/AttenuationTest.glb",
    "Avocado/glTF-Binary/Avocado.glb",
    "BarramundiFish/glTF-Binary/BarramundiFish.glb",
    "BoomBox/glTF-Binary/BoomBox.glb",
    "Box/glTF-Binary/Box.glb",
    "BoxAnimated/glTF-Binary/BoxAnimated.glb",
    "BoxInterleaved/glTF-Binary/BoxInterleaved.glb",
    "BoxTextured/glTF-Binary/BoxTextured.glb",
    "BoxTexturedNonPowerOfTwo/glTF-Binary/BoxTexturedNonPowerOfTwo.glb",
    "BoxVertexColors/glTF-Binary/BoxVertexColors.glb",
    "BrainStem/glTF-Binary/BrainStem.glb",
    "Buggy/glTF-Binary/Buggy.glb",
    "CesiumMan/glTF-Binary/CesiumMan.glb",
    "CesiumMilkTruck/glTF-Binary/CesiumMilkTruck.glb",
    "ClearCoatCarPaint/glTF-Binary/ClearCoatCarPaint.glb",
    "ClearCoatTest/glTF-Binary/ClearCoatTest.glb",
    "ClearcoatWicker/glTF-Binary/ClearcoatWicker.glb",
    "Corset/glTF-Binary/Corset.glb",
    "DamagedHelmet/glTF-Binary/DamagedHelmet.glb",
    "DragonAttenuation/glTF-Binary/DragonAttenuation.glb",
    "Duck/glTF-Binary/Duck.glb",
    "EmissiveStrengthTest/glTF-Binary/EmissiveStrengthTest.glb",
    "Fox/glTF-Binary/Fox.glb",
    "GearboxAssy/glTF-Binary/GearboxAssy.glb",
    "GlamVelvetSofa/glTF-Binary/GlamVelvetSofa.glb",
    "InterpolationTest/glTF-Binary/InterpolationTest.glb",
    "IridescenceLamp/glTF-Binary/IridescenceLamp.glb",
    "IridescenceSuzanne/glTF-Binary/IridescenceSuzanne.glb",
    "IridescentDishWithOlives/glTF-Binary/IridescentDishWithOlives.glb",
    "Lantern/glTF-Binary/Lantern.glb",
    "LightsPunctualLamp/glTF-Binary/LightsPunctualLamp.glb",
    "MaterialsVariantsShoe/glTF-Binary/MaterialsVariantsShoe.glb",
    "MetalRoughSpheres/glTF-Binary/MetalRoughSpheres.glb",
    "MetalRoughSpheresNoTextures/glTF-Binary/MetalRoughSpheresNoTextures.glb",
    "MorphPrimitivesTest/glTF-Binary/MorphPrimitivesTest.glb",
    "MorphStressTest/glTF-Binary/MorphStressTest.glb",
    "MosquitoInAmber/glTF-Binary/MosquitoInAmber.glb",
    "MultiUVTest/glTF-Binary/MultiUVTest.glb",
    "NegativeScaleTest/glTF-Binary/NegativeScaleTest.glb",
    "NormalTangentMirrorTest/glTF-Binary/NormalTangentMirrorTest.glb",
    "NormalTangentTest/glTF-Binary/NormalTangentTest.glb",
    "OrientationTest/glTF-Binary/OrientationTest.glb",
    "ReciprocatingSaw/glTF-Binary/ReciprocatingSaw.glb",
    "RecursiveSkeletons/glTF-Binary/RecursiveSkeletons.glb",
    "RiggedFigure/glTF-Binary/RiggedFigure.glb",
    "RiggedSimple/glTF-Binary/RiggedSimple.glb",
    "SheenChair/glTF-Binary/SheenChair.glb",
    "SimpleInstancing/glTF-Binary/SimpleInstancing.glb",
    "SpecGlossVsMetalRough/glTF-Binary/SpecGlossVsMetalRough.glb",
    "SpecularTest/glTF-Binary/SpecularTest.glb",
    "TextureCoordinateTest/glTF-Binary/TextureCoordinateTest.glb",
    "TextureEncodingTest/glTF-Binary/TextureEncodingTest.glb",
    "TextureLinearInterpolationTest/glTF-Binary/TextureLinearInterpolationTest.glb",
    "TextureSettingsTest/glTF-Binary/TextureSettingsTest.glb",
    "TextureTransformMultiTest/glTF-Binary/TextureTransformMultiTest.glb",
    "ToyCar/glTF-Binary/ToyCar.glb",
    "TransmissionRoughnessTest/glTF-Binary/TransmissionRoughnessTest.glb",
    "TransmissionTest/glTF-Binary/TransmissionTest.glb",
    "Unicode❤♻Test/glTF-Binary/Unicode❤♻Test.glb",
    "UnlitTest/glTF-Binary/UnlitTest.glb",
    "VC/glTF-Binary/VC.glb",
    "VertexColorTest/glTF-Binary/VertexColorTest.glb",
    "WaterBottle/glTF-Binary/WaterBottle.glb",
};
